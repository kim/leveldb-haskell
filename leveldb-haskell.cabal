name:                leveldb-haskell
version:             0.6.4
synopsis:            Haskell bindings to LevelDB
homepage:            http://github.com/kim/leveldb-haskell
bug-reports:         http://github.com/kim/leveldb-haskell/issues
license:             BSD3
license-file:        LICENSE
author:              Kim Altintop et.al. (see AUTHORS file)
maintainer:          kim.altintop@gmail.com
copyright:           Copyright (c) 2012-2014 The leveldb-haskell Authors
category:            Database, FFI
stability:           Experimental
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.4.2, GHC == 7.6.4, GHC == 7.8.3, GHC == 7.10.1
description:
    From <http://code.google.com/p/snappy>:
    .
    LevelDB is a fast key-value storage library written at Google that provides
    an ordered mapping from string keys to string values.
    .
    .
    This library provides a Haskell language binding to LeveldDB. It is in very
    early stage and has seen very limited testing.
    .
    Note: as of v1.3, LevelDB can be built as a shared library. Thus, as of
    v0.1.0 of this library, LevelDB is no longer bundled and must be installed
    on the target system (version 1.7 or greater is required).

extra-source-files:  Readme.md, AUTHORS, CHANGELOG examples/*.hs
                  ,  submodules/leveldb/include/leveldb/*.h
                  ,  submodules/leveldb/port/*.h
                  ,  submodules/leveldb/util/*.h
                  ,  submodules/leveldb/helpers/memenv/*.h
                  ,  submodules/leveldb/table/*.h
                  ,  submodules/leveldb/db/*.h

source-repository head
  type:     git
  location: git://github.com/kim/leveldb-haskell.git

Flag Examples
  description:      Build examples
  default:          False
  manual:           True

library
  exposed-modules:  Database.LevelDB
                  , Database.LevelDB.Base
                  , Database.LevelDB.C
                  , Database.LevelDB.Internal
                  , Database.LevelDB.Iterator
                  , Database.LevelDB.MonadResource
                  , Database.LevelDB.Streaming
                  , Database.LevelDB.Types
                  , Data.Stream.Monadic

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , data-default
                  , exceptions >= 0.6
                  , filepath
                  , resourcet > 0.3.2
                  , transformers

  ghc-options:      -Wall -rtsopts -funbox-strict-fields
  ghc-prof-options: -prof -auto-all
  include-dirs:     submodules/leveldb/include
              ,     submodules/leveldb

  cc-options:       -fno-builtin-memcmp -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -O2 -DNDEBUG
  c-sources:        submodules/leveldb/port/port_posix.cc
           ,        submodules/leveldb/util/crc32c.cc
           ,        submodules/leveldb/util/histogram.cc
           ,        submodules/leveldb/util/options.cc
           ,        submodules/leveldb/util/status.cc
           ,        submodules/leveldb/util/coding.cc
           ,        submodules/leveldb/util/env_posix.cc
           ,        submodules/leveldb/util/env.cc
           ,        submodules/leveldb/util/cache.cc
           ,        submodules/leveldb/util/logging.cc
           ,        submodules/leveldb/util/arena.cc
           ,        submodules/leveldb/util/hash.cc
           ,        submodules/leveldb/util/filter_policy.cc
           ,        submodules/leveldb/util/bloom.cc
           ,        submodules/leveldb/util/comparator.cc
           ,        submodules/leveldb/helpers/memenv/memenv.cc
           ,        submodules/leveldb/table/block.cc
           ,        submodules/leveldb/table/iterator.cc
           ,        submodules/leveldb/table/block_builder.cc
           ,        submodules/leveldb/table/two_level_iterator.cc
           ,        submodules/leveldb/table/filter_block.cc
           ,        submodules/leveldb/table/merger.cc
           ,        submodules/leveldb/table/table.cc
           ,        submodules/leveldb/table/format.cc
           ,        submodules/leveldb/table/table_builder.cc
           ,        submodules/leveldb/db/version_edit.cc
           ,        submodules/leveldb/db/db_iter.cc
           ,        submodules/leveldb/db/builder.cc
           ,        submodules/leveldb/db/version_set.cc
           ,        submodules/leveldb/db/log_writer.cc
           ,        submodules/leveldb/db/log_reader.cc
           ,        submodules/leveldb/db/repair.cc
           ,        submodules/leveldb/db/c.cc
           ,        submodules/leveldb/db/filename.cc
           ,        submodules/leveldb/db/write_batch.cc
           ,        submodules/leveldb/db/db_impl.cc
           ,        submodules/leveldb/db/dbformat.cc
           ,        submodules/leveldb/db/memtable.cc
           ,        submodules/leveldb/db/table_cache.cc

  hs-source-dirs:   src

executable leveldb-example-comparator
  main-is:          comparator.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -threaded -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-features
  main-is:          features.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , transformers
                  , resourcet > 0.3.2
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -threaded -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-filterpolicy
  main-is:          filterpolicy.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -threaded -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-iterforkio
  main-is:          iterforkio.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , async
                  , bytestring
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -threaded -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

test-suite leveldb-properties
  type:             exitcode-stdio-1.0
  main-is:          Main.hs
  hs-source-dirs:   test

  other-modules:    Test.Streaming

  default-language: Haskell2010

  build-depends:    base
                  , bytestring
                  , data-default
                  , directory
                  , exceptions       >= 0.6
                  , mtl
                  , leveldb-haskell
                  , QuickCheck       >= 2.7
                  , tasty            >= 0.10
                  , tasty-quickcheck >= 0.8
                  , temporary
                  , transformers

  ghc-options:      -Wall -O -rtsopts -threaded -with-rtsopts=-N
